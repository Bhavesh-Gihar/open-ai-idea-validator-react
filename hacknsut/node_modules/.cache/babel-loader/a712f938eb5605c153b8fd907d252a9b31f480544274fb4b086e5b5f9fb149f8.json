{"ast":null,"code":"var _jsxFileName = \"/Users/parthmahajan/open-ai-idea-validator-react/hacknsut/src/components/InterfaceAI.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Configuration,\n  OpenAIApi\n} = require(\"openai\");\n// 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\n\nfunction InterfaceAI() {\n  _s();\n  const configuration = new Configuration({\n    apiKey: \"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\"\n  });\n  const [prompt, setPrompt] = useState(\"\");\n  async function sendAi(e) {\n    e.preventDefault();\n    // console.log(\"hi\");\n    const openai = new OpenAIApi(configuration);\n    const response = await openai.createCompletion({\n      model: \"text-davinci-003\",\n      prompt: prompt,\n      max_tokens: 100,\n      temperature: 0\n    });\n    const doc = document.querySelector(\".resultAI\");\n    console.log(response.data.choices[0].text);\n    doc.innerHTML = response.data.choices[0].text;\n    doc.style.backgroundColor = \"rgba(255, 255, 255,0.2)\";\n  }\n  let baseprompt = \"Validate the Idea : \";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"interfaceAI\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"resultAI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"inputAI\",\n      action: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"inputTextAI\",\n        placeholder: \"Write a prompt for your mail:\",\n        onChange: e => setPrompt(baseprompt + e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn buttonAI\",\n        onClick: sendAi,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-paper-plane\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(InterfaceAI, \"aktPPfsqt7fI0SQCfTqjxGF+A+w=\");\n_c = InterfaceAI;\nexport default InterfaceAI;\nvar _c;\n$RefreshReg$(_c, \"InterfaceAI\");","map":{"version":3,"names":["React","useState","Configuration","OpenAIApi","require","InterfaceAI","configuration","apiKey","prompt","setPrompt","sendAi","e","preventDefault","openai","response","createCompletion","model","max_tokens","temperature","doc","document","querySelector","console","log","data","choices","text","innerHTML","style","backgroundColor","baseprompt","target","value"],"sources":["/Users/parthmahajan/open-ai-idea-validator-react/hacknsut/src/components/InterfaceAI.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nconst { Configuration, OpenAIApi } = require(\"openai\");\r\n// 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\r\n\r\nfunction InterfaceAI() {\r\n  const configuration = new Configuration({\r\n    apiKey: \"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\",\r\n  });\r\n  const [prompt, setPrompt] = useState(\"\");\r\n  async function sendAi(e) {\r\n    e.preventDefault();\r\n    // console.log(\"hi\");\r\n    const openai = new OpenAIApi(configuration);\r\n    const response = await openai.createCompletion({\r\n      model: \"text-davinci-003\",\r\n      prompt: prompt,\r\n      max_tokens: 100,\r\n      temperature: 0,\r\n    });\r\n    const doc = document.querySelector(\".resultAI\");\r\n    console.log(response.data.choices[0].text);\r\n    doc.innerHTML = response.data.choices[0].text;\r\n    doc.style.backgroundColor = \"rgba(255, 255, 255,0.2)\";\r\n    \r\n  }\r\n  let baseprompt = \"Validate the Idea : \";\r\n  return (\r\n    <div className=\"interfaceAI\">\r\n      <div className=\"resultAI\"></div>\r\n      <form className=\"inputAI\" action=\"\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"inputTextAI\"\r\n          placeholder=\"Write a prompt for your mail:\"\r\n          onChange={(e) => setPrompt(baseprompt + e.target.value)}\r\n        />\r\n        <button type=\"submit\" className=\"btn buttonAI\" onClick={sendAi}>\r\n          <i className=\"fa fa-paper-plane\"></i>\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InterfaceAI;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AACxC,MAAM;EAAEC,aAAa;EAAEC;AAAU,CAAC,GAAGC,OAAO,CAAC,QAAQ,CAAC;AACtD;;AAEA,SAASC,WAAW,GAAG;EAAA;EACrB,MAAMC,aAAa,GAAG,IAAIJ,aAAa,CAAC;IACtCK,MAAM,EAAE;EACV,CAAC,CAAC;EACF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxC,eAAeS,MAAM,CAACC,CAAC,EAAE;IACvBA,CAAC,CAACC,cAAc,EAAE;IAClB;IACA,MAAMC,MAAM,GAAG,IAAIV,SAAS,CAACG,aAAa,CAAC;IAC3C,MAAMQ,QAAQ,GAAG,MAAMD,MAAM,CAACE,gBAAgB,CAAC;MAC7CC,KAAK,EAAE,kBAAkB;MACzBR,MAAM,EAAEA,MAAM;MACdS,UAAU,EAAE,GAAG;MACfC,WAAW,EAAE;IACf,CAAC,CAAC;IACF,MAAMC,GAAG,GAAGC,QAAQ,CAACC,aAAa,CAAC,WAAW,CAAC;IAC/CC,OAAO,CAACC,GAAG,CAACT,QAAQ,CAACU,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC;IAC1CP,GAAG,CAACQ,SAAS,GAAGb,QAAQ,CAACU,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI;IAC7CP,GAAG,CAACS,KAAK,CAACC,eAAe,GAAG,yBAAyB;EAEvD;EACA,IAAIC,UAAU,GAAG,sBAAsB;EACvC,oBACE;IAAK,SAAS,EAAC,aAAa;IAAA,wBAC1B;MAAK,SAAS,EAAC;IAAU;MAAA;MAAA;MAAA;IAAA,QAAO,eAChC;MAAM,SAAS,EAAC,SAAS;MAAC,MAAM,EAAC,EAAE;MAAA,wBACjC;QACE,IAAI,EAAC,MAAM;QACX,SAAS,EAAC,aAAa;QACvB,WAAW,EAAC,+BAA+B;QAC3C,QAAQ,EAAGnB,CAAC,IAAKF,SAAS,CAACqB,UAAU,GAAGnB,CAAC,CAACoB,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QACxD,eACF;QAAQ,IAAI,EAAC,QAAQ;QAAC,SAAS,EAAC,cAAc;QAAC,OAAO,EAAEtB,MAAO;QAAA,uBAC7D;UAAG,SAAS,EAAC;QAAmB;UAAA;UAAA;UAAA;QAAA;MAAK;QAAA;QAAA;QAAA;MAAA,QAC9B;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;AAEV;AAAC,GAtCQL,WAAW;AAAA,KAAXA,WAAW;AAwCpB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}