{"ast":null,"code":"var _jsxFileName = \"/Users/parthmahajan/open-ai-idea-validator-react/hacknsut/src/components/InterfaceAI.jsx\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Configuration,\n  OpenAIApi\n} = require(\"openai\");\n// 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\n\nfunction InterfaceAI() {\n  const configuration = new Configuration({\n    apiKey: \"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\"\n  });\n  async function sendAi(e) {\n    e.preventDefault();\n    // console.log(\"hi\");\n    const openai = new OpenAIApi(configuration);\n    const response = await openai.createCompletion({\n      model: \"text-davinci-003\",\n      prompt: \"hi is this a test?\",\n      max_tokens: 100,\n      temperature: 0\n    });\n    console.log(response.data.choices[0].text);\n  }\n  let prompt = \"This is a test prompt. I am testing the AI.\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"interfaceAI\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"resultAI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"inputAI\",\n      action: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"inputTextAI\",\n        placeholder: \"Write a prompt for your mail:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn buttonAI\",\n        onClick: sendAi(prompt),\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-paper-plane\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_c = InterfaceAI;\nexport default InterfaceAI;\nvar _c;\n$RefreshReg$(_c, \"InterfaceAI\");","map":{"version":3,"names":["React","useState","Configuration","OpenAIApi","require","InterfaceAI","configuration","apiKey","sendAi","e","preventDefault","openai","response","createCompletion","model","prompt","max_tokens","temperature","console","log","data","choices","text"],"sources":["/Users/parthmahajan/open-ai-idea-validator-react/hacknsut/src/components/InterfaceAI.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nconst { Configuration, OpenAIApi } = require(\"openai\");\r\n// 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\r\n\r\nfunction InterfaceAI() {\r\n  const configuration = new Configuration({\r\n    apiKey: \"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\",\r\n  });\r\n\r\n  async function sendAi( e) {\r\n    e.preventDefault();\r\n    // console.log(\"hi\");\r\n    const openai = new OpenAIApi(configuration);\r\n    const response = await openai.createCompletion({\r\n      model: \"text-davinci-003\",\r\n      prompt: \"hi is this a test?\",\r\n      max_tokens: 100,\r\n      temperature: 0,\r\n    });\r\n    console.log(response.data.choices[0].text);\r\n  }\r\n  let prompt = \"This is a test prompt. I am testing the AI.\";\r\n  return (\r\n    <div className=\"interfaceAI\">\r\n      <div className=\"resultAI\"></div>\r\n      <form className=\"inputAI\" action=\"\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"inputTextAI\"\r\n          placeholder=\"Write a prompt for your mail:\"\r\n        />\r\n        <button className=\"btn buttonAI\" onClick={sendAi(prompt)}>\r\n          <i className=\"fa fa-paper-plane\"></i>\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InterfaceAI;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AACxC,MAAM;EAAEC,aAAa;EAAEC;AAAU,CAAC,GAAGC,OAAO,CAAC,QAAQ,CAAC;AACtD;;AAEA,SAASC,WAAW,GAAG;EACrB,MAAMC,aAAa,GAAG,IAAIJ,aAAa,CAAC;IACtCK,MAAM,EAAE;EACV,CAAC,CAAC;EAEF,eAAeC,MAAM,CAAEC,CAAC,EAAE;IACxBA,CAAC,CAACC,cAAc,EAAE;IAClB;IACA,MAAMC,MAAM,GAAG,IAAIR,SAAS,CAACG,aAAa,CAAC;IAC3C,MAAMM,QAAQ,GAAG,MAAMD,MAAM,CAACE,gBAAgB,CAAC;MAC7CC,KAAK,EAAE,kBAAkB;MACzBC,MAAM,EAAE,oBAAoB;MAC5BC,UAAU,EAAE,GAAG;MACfC,WAAW,EAAE;IACf,CAAC,CAAC;IACFC,OAAO,CAACC,GAAG,CAACP,QAAQ,CAACQ,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC;EAC5C;EACA,IAAIP,MAAM,GAAG,6CAA6C;EAC1D,oBACE;IAAK,SAAS,EAAC,aAAa;IAAA,wBAC1B;MAAK,SAAS,EAAC;IAAU;MAAA;MAAA;MAAA;IAAA,QAAO,eAChC;MAAM,SAAS,EAAC,SAAS;MAAC,MAAM,EAAC,EAAE;MAAA,wBACjC;QACE,IAAI,EAAC,MAAM;QACX,SAAS,EAAC,aAAa;QACvB,WAAW,EAAC;MAA+B;QAAA;QAAA;QAAA;MAAA,QAC3C,eACF;QAAQ,SAAS,EAAC,cAAc;QAAC,OAAO,EAAEP,MAAM,CAACO,MAAM,CAAE;QAAA,uBACvD;UAAG,SAAS,EAAC;QAAmB;UAAA;UAAA;UAAA;QAAA;MAAK;QAAA;QAAA;QAAA;MAAA,QAC9B;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;AAEV;AAAC,KAjCQV,WAAW;AAmCpB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}