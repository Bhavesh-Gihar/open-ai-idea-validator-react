{"ast":null,"code":"var _jsxFileName = \"/Users/parthmahajan/open-ai-idea-validator-react/hacknsut/src/components/TextAI.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TextAI() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"textAI\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"textOneAI\",\n      children: \"Do You Have An Idea ?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"textTwoAI\",\n      children: [\"Let's validate it with AI, trained with 10000s\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 13\n      }, this), \"of data\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}\n_c = TextAI;\nexport default TextAI;\nvar _c;\n$RefreshReg$(_c, \"TextAI\");","map":{"version":3,"names":["React","TextAI"],"sources":["/Users/parthmahajan/open-ai-idea-validator-react/hacknsut/src/components/TextAI.jsx"],"sourcesContent":["import React from 'react';\r\n\r\nfunction TextAI() {\r\n  return (\r\n    <div className=\"textAI\">\r\n        <p className='textOneAI'>Do You Have An Idea ?</p>\r\n        <p className='textTwoAI'>\r\n            Let's validate it with AI, trained with 10000s\r\n            <br />\r\n            of data\r\n        </p>\r\n        \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TextAI;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAE1B,SAASC,MAAM,GAAG;EAChB,oBACE;IAAK,SAAS,EAAC,QAAQ;IAAA,wBACnB;MAAG,SAAS,EAAC,WAAW;MAAA,UAAC;IAAqB;MAAA;MAAA;MAAA;IAAA,QAAI,eAClD;MAAG,SAAS,EAAC,WAAW;MAAA,WAAC,gDAErB;QAAA;QAAA;QAAA;MAAA,QAAM,WAEV;IAAA;MAAA;MAAA;MAAA;IAAA,QAAI;EAAA;IAAA;IAAA;IAAA;EAAA,QAEF;AAEV;AAAC,KAZQA,MAAM;AAcf,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}